/****************************************************************************** * Copyright (C) 2008 Adam Parker. All rights reserved. * * Permission is hereby granted, free of charge, to any person obtaining * a copy of this software and associated documentation files (the * "Software"), to deal in the Software without restriction, including * without limitation the rights to use, copy, modify, merge, publish, * distribute, sublicense, and/or sell copies of the Software, and to * permit persons to whom the Software is furnished to do so, subject to * the following conditions: * * The above copyright notice and this permission notice shall be * included in all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. ******************************************************************************/import java.util.*;import java.awt.*;import java.awt.event.*;import javax.swing.*;import java.io.*;import java.net.*;class ActionSet extends AbstractAction {	private String action = "";	private EchoClient echo;	private JSlider slider;	private String temp = "";	private NinjaGUI ninja;	private EchoClient client;    public ActionSet(String pAction, JSlider pSlider, NinjaGUI pNinja, EchoClient pClient)     {    	  super();    	  action = pAction;    	  client = pClient;     	  slider = pSlider;    	  ninja = pNinja;    }        public void actionPerformed(ActionEvent e)    {		//if(action != ninja.getCurrentCom())		//{		    String speed = "000000";			speed = speed + slider.getValue();			speed = speed.substring(speed.length() - 3, speed.length());			String tcpCommand = "";						if(action == "forward")			{				tcpCommand = "L+"+speed+"R+"+speed;			}			else if (action == "backward")			{				tcpCommand = "L-"+speed+"R-"+speed;			}			else if (action == "left")			{				tcpCommand = "L+000R+"+speed;			}			else if (action == "right")			{				tcpCommand = "L+"+speed+"R+000";			}			else if (action == "halt")			{				tcpCommand = "L+000R+000";			}			else if (action == "open")			{				tcpCommand = "O.........";			}			else if (action == "close")			{				tcpCommand = "C.........";			}			try			{				//ninja.setCurrentCom(action);				//System.out.println(tcpCommand);		    	client.sendString(tcpCommand);			}			catch(Exception ex)			{				ninja.updateGUI(ex.toString(), null);			}		//}    }}